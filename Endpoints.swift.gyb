%{
import parse
import swifty_flavors as swift

endpoints = parse.parseEndpoints("sample.yml")
}%
// 
// Endpoint definitions generated by Swako
//

public struct Endpoints {

    % for endpoint in endpoints:
    public struct ????? {
        % for method in endpoint.methods:
        public struct ${swift.makePascalCase(method.method)} {
            var path: String {
                return "${endpoint.path}"
            }

            % params = ", ".join([parameter.name + ": " + swift.typeNameFromParameter(parameter) for parameter in method.parameters])
            public init(${params}) {
                % for parameter in method.parameters:
                self.${parameter.name} = ${parameter.name}
                % end
            }

            % for parameter in method.parameters:
            private let ${parameter.name}: ${swift.typeNameFromParameter(parameter)}
            % end
            
            var parameters: [String: Any] {
                % for parameter in method.parameters:
                "${parameter.name}": ${parameter.name},
                % end
            }
        }
        % end
    }
    
    % end
}
