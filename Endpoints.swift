// 
// Endpoint definitions generated by Swako
//

public struct Endpoints {

    public struct ????? {
        public struct Post {
            var path: String {
                return "/user/createWithArray"
            }

            public init(body: ???????????????) {
                self.body = body
            }

            private let body: ???????????????
            
            var parameters: [String: Any] {
                "body": body,
            }
        }
    }
    
    public struct ????? {
        public struct Post {
            var path: String {
                return "/store/order"
            }

            public init(body: ???????????????) {
                self.body = body
            }

            private let body: ???????????????
            
            var parameters: [String: Any] {
                "body": body,
            }
        }
    }
    
    public struct ????? {
        public struct Post {
            var path: String {
                return "/pet/{petId}"
            }

            public init(petId: Int, name: String, status: String) {
                self.petId = petId
                self.name = name
                self.status = status
            }

            private let petId: Int
            private let name: String
            private let status: String
            
            var parameters: [String: Any] {
                "petId": petId,
                "name": name,
                "status": status,
            }
        }
        public struct Get {
            var path: String {
                return "/pet/{petId}"
            }

            public init(petId: Int) {
                self.petId = petId
            }

            private let petId: Int
            
            var parameters: [String: Any] {
                "petId": petId,
            }
        }
        public struct Delete {
            var path: String {
                return "/pet/{petId}"
            }

            public init(api_key: String, petId: Int) {
                self.api_key = api_key
                self.petId = petId
            }

            private let api_key: String
            private let petId: Int
            
            var parameters: [String: Any] {
                "api_key": api_key,
                "petId": petId,
            }
        }
    }
    
    public struct ????? {
        public struct Put {
            var path: String {
                return "/pet"
            }

            public init(body: ???????????????) {
                self.body = body
            }

            private let body: ???????????????
            
            var parameters: [String: Any] {
                "body": body,
            }
        }
        public struct Post {
            var path: String {
                return "/pet"
            }

            public init(body: ???????????????) {
                self.body = body
            }

            private let body: ???????????????
            
            var parameters: [String: Any] {
                "body": body,
            }
        }
    }
    
    public struct ????? {
        public struct Get {
            var path: String {
                return "/store/inventory"
            }

            public init() {
            }

            
            var parameters: [String: Any] {
            }
        }
    }
    
    public struct ????? {
        public struct Put {
            var path: String {
                return "/user/{username}"
            }

            public init(username: String, body: ???????????????) {
                self.username = username
                self.body = body
            }

            private let username: String
            private let body: ???????????????
            
            var parameters: [String: Any] {
                "username": username,
                "body": body,
            }
        }
        public struct Get {
            var path: String {
                return "/user/{username}"
            }

            public init(username: String) {
                self.username = username
            }

            private let username: String
            
            var parameters: [String: Any] {
                "username": username,
            }
        }
        public struct Delete {
            var path: String {
                return "/user/{username}"
            }

            public init(username: String) {
                self.username = username
            }

            private let username: String
            
            var parameters: [String: Any] {
                "username": username,
            }
        }
    }
    
    public struct ????? {
        public struct Get {
            var path: String {
                return "/user/login"
            }

            public init(username: String, password: String) {
                self.username = username
                self.password = password
            }

            private let username: String
            private let password: String
            
            var parameters: [String: Any] {
                "username": username,
                "password": password,
            }
        }
    }
    
    public struct ????? {
        public struct Get {
            var path: String {
                return "/store/order/{orderId}"
            }

            public init(orderId: Int) {
                self.orderId = orderId
            }

            private let orderId: Int
            
            var parameters: [String: Any] {
                "orderId": orderId,
            }
        }
        public struct Delete {
            var path: String {
                return "/store/order/{orderId}"
            }

            public init(orderId: Int) {
                self.orderId = orderId
            }

            private let orderId: Int
            
            var parameters: [String: Any] {
                "orderId": orderId,
            }
        }
    }
    
    public struct ????? {
        public struct Get {
            var path: String {
                return "/pet/findByStatus"
            }

            public init(status: ???????????????) {
                self.status = status
            }

            private let status: ???????????????
            
            var parameters: [String: Any] {
                "status": status,
            }
        }
    }
    
    public struct ????? {
        public struct Get {
            var path: String {
                return "/user/logout"
            }

            public init() {
            }

            
            var parameters: [String: Any] {
            }
        }
    }
    
    public struct ????? {
        public struct Post {
            var path: String {
                return "/user/createWithList"
            }

            public init(body: ???????????????) {
                self.body = body
            }

            private let body: ???????????????
            
            var parameters: [String: Any] {
                "body": body,
            }
        }
    }
    
    public struct ????? {
        public struct Post {
            var path: String {
                return "/user"
            }

            public init(body: ???????????????) {
                self.body = body
            }

            private let body: ???????????????
            
            var parameters: [String: Any] {
                "body": body,
            }
        }
    }
    
    public struct ????? {
        public struct Post {
            var path: String {
                return "/pet/{petId}/uploadImage"
            }

            public init(petId: Int, additionalMetadata: String, file: File is not supported) {
                self.petId = petId
                self.additionalMetadata = additionalMetadata
                self.file = file
            }

            private let petId: Int
            private let additionalMetadata: String
            private let file: File is not supported
            
            var parameters: [String: Any] {
                "petId": petId,
                "additionalMetadata": additionalMetadata,
                "file": file,
            }
        }
    }
    
    public struct ????? {
        public struct Get {
            var path: String {
                return "/pet/findByTags"
            }

            public init(tags: ???????????????) {
                self.tags = tags
            }

            private let tags: ???????????????
            
            var parameters: [String: Any] {
                "tags": tags,
            }
        }
    }
    
}
